[{"D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\index.tsx":"1","D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\reportWebVitals.ts":"2","D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\App.tsx":"3","E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\index.tsx":"4","E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\reportWebVitals.ts":"5","E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\App.tsx":"6","E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\components\\Card\\index.tsx":"7"},{"size":500,"mtime":1607039114067,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607039114067,"results":"10","hashOfConfig":"9"},{"size":556,"mtime":1607039114067,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1607039114067,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1607039114067,"results":"14","hashOfConfig":"13"},{"size":5452,"mtime":1636951411286,"results":"15","hashOfConfig":"13"},{"size":1133,"mtime":1636951503695,"results":"16","hashOfConfig":"13"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hvkl83",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1kx8ig4",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\index.tsx",[],"D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\reportWebVitals.ts",[],"D:\\ReactJs\\React_Project\\TypeSCRIPT\\type_root\\src\\App.tsx",[],"E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\index.tsx",[],["33","34"],"E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\reportWebVitals.ts",[],"E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\App.tsx",["35"],"import React, { useEffect } from 'react'\nimport { styled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Badge from '@mui/material/Badge'\nimport Menu from '@mui/material/Menu'\nimport MenuItem from '@mui/material/MenuItem'\nimport InputBase from '@mui/material/InputBase'\n\nimport NotificationsIcon from '@mui/icons-material/Notifications'\nimport SearchIcon from '@mui/icons-material/Search'\nimport MoreIcon from '@mui/icons-material/MoreVert'\n\nimport { io, Socket } from 'socket.io-client'\nimport axios from 'axios'\n\nimport ArticleCard from './components/Card'\n\nexport interface Category {\n  id: string\n  name: string\n  posts: Article[]\n}\n\nexport interface Article {\n  id: string\n  title: string\n  content: string\n  categories: Category[]\n}\n\nconst Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}))\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n\nfunction App() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null)\n  const [socket, setSocket] = React.useState<Socket | null>(null)\n  const [notifications, setNotifications] = React.useState<string[]>([])\n  const [articles, setArticles] = React.useState<Article[] | null>()\n\n  useEffect(() => {\n    const socket = io('http://localhost:5000/post')\n    setSocket(socket)\n\n    async function getPosts() {\n      const articles = await axios.get('http://localhost:5000/v1/api/post')\n\n      setArticles(articles.data)\n    }\n\n    getPosts()\n  }, [])\n\n  console.log(articles)\n\n  useEffect(() => {\n    socket?.on('postArticle', (data: string) => {\n      setNotifications((prev: string[]) => [...prev, data])\n    })\n  }, [socket])\n\n  console.log(notifications)\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  }\n\n  return (\n    <React.Fragment>\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Search>\n              <SearchIconWrapper>\n                <SearchIcon />\n              </SearchIconWrapper>\n              <StyledInputBase\n                placeholder=\"Searchâ€¦\"\n                inputProps={{ 'aria-label': 'search' }}\n              />\n            </Search>\n            <Box sx={{ flexGrow: 1 }} />\n            <Box sx={{ display: { xs: 'none', md: 'flex' }}}>\n              <IconButton \n                size=\"large\" \n                aria-label=\"show 4 new notifications\" \n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <Badge badgeContent={notifications.length} color=\"error\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right'\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem>\n                  Profile\n                </MenuItem>\n              </Menu>\n            </Box>\n            <Box sx={{ display: { xs: 'flex', md: 'none' }}}>\n              <IconButton\n                size=\"large\"\n                aria-label=\"show more\"\n                aria-controls=\"primary-search-account-menu-mobile\"\n                aria-haspopup=\"true\"\n                onClick={handleMobileMenuOpen}\n                color=\"inherit\"\n              >\n                <MoreIcon />\n              </IconButton>\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </Box>\n      <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: 6 }}>\n        {articles?.map((article: Article) => {\n          return (\n            <ArticleCard \n              key={article.id} \n              article={article}\n            />\n          )\n        })}\n      </Box>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","E:\\PORTOFOLIO\\BACKEND\\Ntification-nestjs-socket-io\\client\\src\\components\\Card\\index.tsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":75,"column":10,"nodeType":"42","messageId":"43","endLine":75,"endColumn":28},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"@typescript-eslint/no-unused-vars","'mobileMoreAnchorEl' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]